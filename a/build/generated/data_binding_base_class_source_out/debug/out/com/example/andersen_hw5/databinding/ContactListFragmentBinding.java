// Generated by view binder compiler. Do not edit!
package com.example.andersen_hw5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.andersen_hw5.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactListFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout contact1;

  @NonNull
  public final LinearLayout contact1Block;

  @NonNull
  public final TextView contact1BlockName;

  @NonNull
  public final TextView contact1BlockNumber;

  @NonNull
  public final TextView contact1BlockSurname;

  @NonNull
  public final LinearLayout contact2;

  @NonNull
  public final LinearLayout contact2Block;

  @NonNull
  public final TextView contact2BlockName;

  @NonNull
  public final TextView contact2BlockNumber;

  @NonNull
  public final TextView contact2BlockSurname;

  @NonNull
  public final LinearLayout contact3;

  @NonNull
  public final LinearLayout contact3Block;

  @NonNull
  public final TextView contact3BlockName;

  @NonNull
  public final TextView contact3BlockNumber;

  @NonNull
  public final TextView contact3BlockSurname;

  @NonNull
  public final ImageView imageView1;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final LinearLayout parentLayout;

  private ContactListFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout contact1, @NonNull LinearLayout contact1Block,
      @NonNull TextView contact1BlockName, @NonNull TextView contact1BlockNumber,
      @NonNull TextView contact1BlockSurname, @NonNull LinearLayout contact2,
      @NonNull LinearLayout contact2Block, @NonNull TextView contact2BlockName,
      @NonNull TextView contact2BlockNumber, @NonNull TextView contact2BlockSurname,
      @NonNull LinearLayout contact3, @NonNull LinearLayout contact3Block,
      @NonNull TextView contact3BlockName, @NonNull TextView contact3BlockNumber,
      @NonNull TextView contact3BlockSurname, @NonNull ImageView imageView1,
      @NonNull ImageView imageView2, @NonNull ImageView imageView3,
      @NonNull LinearLayout parentLayout) {
    this.rootView = rootView;
    this.contact1 = contact1;
    this.contact1Block = contact1Block;
    this.contact1BlockName = contact1BlockName;
    this.contact1BlockNumber = contact1BlockNumber;
    this.contact1BlockSurname = contact1BlockSurname;
    this.contact2 = contact2;
    this.contact2Block = contact2Block;
    this.contact2BlockName = contact2BlockName;
    this.contact2BlockNumber = contact2BlockNumber;
    this.contact2BlockSurname = contact2BlockSurname;
    this.contact3 = contact3;
    this.contact3Block = contact3Block;
    this.contact3BlockName = contact3BlockName;
    this.contact3BlockNumber = contact3BlockNumber;
    this.contact3BlockSurname = contact3BlockSurname;
    this.imageView1 = imageView1;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.parentLayout = parentLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactListFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactListFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contact_list_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactListFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact1;
      LinearLayout contact1 = ViewBindings.findChildViewById(rootView, id);
      if (contact1 == null) {
        break missingId;
      }

      id = R.id.contact1Block;
      LinearLayout contact1Block = ViewBindings.findChildViewById(rootView, id);
      if (contact1Block == null) {
        break missingId;
      }

      id = R.id.contact1BlockName;
      TextView contact1BlockName = ViewBindings.findChildViewById(rootView, id);
      if (contact1BlockName == null) {
        break missingId;
      }

      id = R.id.contact1BlockNumber;
      TextView contact1BlockNumber = ViewBindings.findChildViewById(rootView, id);
      if (contact1BlockNumber == null) {
        break missingId;
      }

      id = R.id.contact1BlockSurname;
      TextView contact1BlockSurname = ViewBindings.findChildViewById(rootView, id);
      if (contact1BlockSurname == null) {
        break missingId;
      }

      id = R.id.contact2;
      LinearLayout contact2 = ViewBindings.findChildViewById(rootView, id);
      if (contact2 == null) {
        break missingId;
      }

      id = R.id.contact2Block;
      LinearLayout contact2Block = ViewBindings.findChildViewById(rootView, id);
      if (contact2Block == null) {
        break missingId;
      }

      id = R.id.contact2BlockName;
      TextView contact2BlockName = ViewBindings.findChildViewById(rootView, id);
      if (contact2BlockName == null) {
        break missingId;
      }

      id = R.id.contact2BlockNumber;
      TextView contact2BlockNumber = ViewBindings.findChildViewById(rootView, id);
      if (contact2BlockNumber == null) {
        break missingId;
      }

      id = R.id.contact2BlockSurname;
      TextView contact2BlockSurname = ViewBindings.findChildViewById(rootView, id);
      if (contact2BlockSurname == null) {
        break missingId;
      }

      id = R.id.contact3;
      LinearLayout contact3 = ViewBindings.findChildViewById(rootView, id);
      if (contact3 == null) {
        break missingId;
      }

      id = R.id.contact3Block;
      LinearLayout contact3Block = ViewBindings.findChildViewById(rootView, id);
      if (contact3Block == null) {
        break missingId;
      }

      id = R.id.contact3BlockName;
      TextView contact3BlockName = ViewBindings.findChildViewById(rootView, id);
      if (contact3BlockName == null) {
        break missingId;
      }

      id = R.id.contact3BlockNumber;
      TextView contact3BlockNumber = ViewBindings.findChildViewById(rootView, id);
      if (contact3BlockNumber == null) {
        break missingId;
      }

      id = R.id.contact3BlockSurname;
      TextView contact3BlockSurname = ViewBindings.findChildViewById(rootView, id);
      if (contact3BlockSurname == null) {
        break missingId;
      }

      id = R.id.imageView1;
      ImageView imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.parentLayout;
      LinearLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      return new ContactListFragmentBinding((ConstraintLayout) rootView, contact1, contact1Block,
          contact1BlockName, contact1BlockNumber, contact1BlockSurname, contact2, contact2Block,
          contact2BlockName, contact2BlockNumber, contact2BlockSurname, contact3, contact3Block,
          contact3BlockName, contact3BlockNumber, contact3BlockSurname, imageView1, imageView2,
          imageView3, parentLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
